#include <iostream>
#include<windows.h>
using namespace std;

const int N=512;//size
int a[N];

void initnums(int n)//元素初始化
{
    for(int i=0;i<n;i++)
    {
        a[i]=i;
    }
}

void normalway(int n)//平凡链式算法：将给定元素依次累加
{
    int sum=0;
    for(int i=0;i<n;i++)
    {
        sum+=a[i];
    }
}

void multiway(int n)//多链路式实现
{
    int sum1=0,sum2=0;
    for(int i=0;i<n;i+=2)//只需要实现n/2次循环
    {
        sum1+=a[i];
        sum2+=a[i+1];
    }
    sum1+=sum2;
}

void recursion(int n)//递归算法实现
{
    if(n==1)
    {
        return;
    }
    else
    {
        for(int i=0;i<n/2;i++)
        {
            a[i]+=a[n-i-1];
        }
        n=n/2;
        recursion(n);//尾递归
    }
}

void doublecircle(int n)//双重循环
{
    for(int m=n;m>1;m/=2)
    {
        for(int i=0;i<m/2;i++)
        {
            a[i]=a[i*2]+a[i*2+1];
        }
    }
    //a[0]为最终结果
}

int main()
{
    long counter;//计算次数
    long long head,tail,freq,curr;
    initnums(N);
    QueryPerformanceFrequency((LARGE_INTEGER *)&freq);
    QueryPerformanceCounter((LARGE_INTEGER *)&head);//开始计时
    while(1)
    {
        QueryPerformanceCounter((LARGE_INTEGER *)&curr);
        if(((curr-head)*1000.0/freq)>=100.0)//至少运行100ms
        {
            break;
        }
        counter+=1;
        //normalway(N);//平凡链式相加
        //multiway(N);//多链路
        //recursion(N);//递归
        doublecircle(N);//双重循环
    }
    QueryPerformanceCounter((LARGE_INTEGER *)&tail);//终止计时
    cout <<"规模n="<<N<<"   次数为"<<counter<< "    总时间为：" << (tail - head) * 1000.0 / freq << "ms" << endl;

}
