#include <iostream>
#include<stdlib.h>
#include<windows.h>
using namespace std;

CONST INT sizes=6000;

DOUBLE matrix[sizes][sizes];
double colmatrix[sizes];
double results[sizes];//结果


void initmatrix()//初始化矩阵
{
	for (int i = 0;i < sizes;i++)
	{
		for (int j = 0;j < sizes;j++)
		{
			matrix[i][j] = i + j;
		}
		colmatrix[i] = i + 1;
		results[i] = 0.0;
	}

}
int main()
{
	long long head, tail, freq;
	initmatrix();
	QueryPerformanceFrequency((LARGE_INTEGER*)&freq);
	QueryPerformanceCounter((LARGE_INTEGER*)&head);//开始时间
	//平凡算法
	/*
	for (int i = 0;i < sizes;i++)
	{
		for (int j = 0;j < sizes;j++)
		{
			results[i] += matrix[j][i] * colmatrix[j];
		}
	}
	*/

	//cache优化算法，与行主存储匹配
	for (int j = 0;j < sizes;j++)
	{
		for (int i = 0;i < sizes;i++)
		{
			results[i] += matrix[j][i] * colmatrix[j];
		}
	}
	QueryPerformanceCounter((LARGE_INTEGER*)&tail);//结束时间
	cout<<"n="<<sizes<<endl;
	cout << "总时间为：" << (tail - head) * 1000.0 / freq << "ms" << endl;
}
