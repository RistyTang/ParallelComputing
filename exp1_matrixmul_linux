#include <sys/time.h>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
using namespace std;

const int sizes=10000;

double matrix[sizes][sizes];
double colmatrix[sizes];
double results[sizes];//结果

void initmatrix()//初始化矩阵
{
	for (int i = 0;i < sizes;i++)
	{
		for (int j = 0;j < sizes;j++)
		{
			matrix[i][j] = i + j;
		}
		colmatrix[i] = i + 1;
		results[i] = 0.0;
	}
}

int main()
{
	struct timeval start;//开始时间
	struct timeval end;//结束时间
	initmatrix();
	gettimeofday(&start,NULL);//from
	//平凡算法
	/*
	for (int i = 0;i < sizes;i++)
	{
		for (int j = 0;j < sizes;j++)
		{
			results[i] += matrix[j][i] * colmatrix[j];
		}
	}
	*/
	//cache优化算法，与行主存储匹配
	for (int j = 0;j < sizes;j++)
	{
		for (int i = 0;i < sizes;i++)
		{
			results[i] += matrix[j][i] * colmatrix[j];
		}
	}
	gettimeofday(&end,NULL);//to
	float timeuse=(end.tv_sec-start.tv_sec)*1000000+(end.tv_usec-start.tv_usec);//微秒
	std::cout<<"重复十次，平均耗时"<<timeuse/10.0<<"微秒"<<std::endl;
	return 0;
}
